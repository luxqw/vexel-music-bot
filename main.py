import os
import logging
import discord
import asyncio
from discord.ext import commands
from discord import app_commands
import yt_dlp

TOKEN = os.getenv("DISCORD_TOKEN")
MAX_PLAYLIST_SIZE = int(os.getenv("MAX_PLAYLIST_SIZE", "15"))
MAX_QUEUE_SIZE = int(os.getenv("MAX_QUEUE_SIZE", "50"))

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.guilds = True

bot = commands.Bot(command_prefix="/", intents=intents)
tree = bot.tree
queues = {}

logging.basicConfig(filename="bot.log", level=logging.INFO)

ytdl_opts = {
    "format": "bestaudio",
    "noplaylist": False,
}
ytdl = yt_dlp.YoutubeDL(ytdl_opts)


def log_command(user, command):
    logging.info(f"{user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª {command}")


def get_queue(guild_id):
    return queues.setdefault(guild_id, [])


def create_source(url):
    return discord.FFmpegPCMAudio(
        url,
        before_options="-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5",
        options='-vn'
    )


@bot.event
async def on_ready():
    print(f"‚úÖ –í–æ—à–ª–∏ –∫–∞–∫ {bot.user}")
    print(f"üìä –õ–∏–º–∏—Ç –ø–ª–µ–π–ª–∏—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {MAX_PLAYLIST_SIZE} —Ç—Ä–µ–∫–æ–≤")
    print(f"üìä –õ–∏–º–∏—Ç –æ—á–µ—Ä–µ–¥–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {MAX_QUEUE_SIZE} —Ç—Ä–µ–∫–æ–≤")
    await bot.change_presence(activity=discord.Activity(
        type=discord.ActivityType.listening,
        name="/help"
    ))
    try:
        synced = await tree.sync()
        print(f"üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã {len(synced)} –∫–æ–º–∞–Ω–¥(—ã)")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ sync: {e}")


@bot.event
async def on_voice_state_update(member, before, after):
    if member.bot:
        return

    vc = discord.utils.get(bot.voice_clients, guild=member.guild)

    if vc and vc.channel and len(vc.channel.members) == 1: 
        if vc.is_playing():
            vc.pause() 
            print("‚è∏Ô∏è –ú—É–∑—ã–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –æ—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω –≤ –∫–∞–Ω–∞–ª–µ.")

        await asyncio.sleep(60)  
        if len(vc.channel.members) == 1:  
            await vc.disconnect()
            print(f"‚èπÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ {vc.channel.name} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {member.guild.name}")


@tree.command(name="play", description="–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç —Å YouTube")
@app_commands.describe(query="–°—Å—ã–ª–∫–∞ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å")
async def play(interaction: discord.Interaction, query: str):
    log_command(interaction.user.name, "/play")

    vc = interaction.guild.voice_client
    if not vc:
        if interaction.user.voice and interaction.user.voice.channel:
            vc = await interaction.user.voice.channel.connect()
        else:
            await interaction.response.send_message("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞–π–¥–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.")
            return

    if query.startswith("http://") or query.startswith("https://"):
        await interaction.response.send_message(f"üîó –î–æ–±–∞–≤–ª—è—é –ø–æ —Å—Å—ã–ª–∫–µ: {query}")
    else:
        await interaction.response.send_message(f"üîç –ò—â—É: {query}")

    search_query = f"ytsearch1:{query}" if not (query.startswith("http://") or query.startswith("https://")) else query

    try:
        info = ytdl.extract_info(search_query, download=False)
    except Exception as e:
        await interaction.followup.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
        return

    queue = get_queue(interaction.guild.id)
    
    # ‚úÖ –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –õ–∏–º–∏—Ç –æ–±—â–µ–π –æ—á–µ—Ä–µ–¥–∏
    if len(queue) >= MAX_QUEUE_SIZE:
        await interaction.followup.send(
            f"‚ùå **–û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∞!**\n"
            f"üí° –ú–∞–∫—Å–∏–º—É–º —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏: {MAX_QUEUE_SIZE}\n"
            f"üìä –°–µ–π—á–∞—Å –≤ –æ—á–µ—Ä–µ–¥–∏: {len(queue)} —Ç—Ä–µ–∫–æ–≤\n"
            f"üéµ –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç—Ä–µ–∫–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/skip`"
        )
        return

    if "entries" in info and info["entries"]:
        # ‚úÖ –û–ë–ù–û–í–ò–¢–¨: –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞ —É—á–∏—Ç—ã–≤–∞—Ç—å –æ–±–∞ –ª–∏–º–∏—Ç–∞
        remaining_slots = MAX_QUEUE_SIZE - len(queue)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–∞–∫ –ø–æ –ª–∏–º–∏—Ç—É –ø–ª–µ–π–ª–∏—Å—Ç–∞, —Ç–∞–∫ –∏ –ø–æ —Å–≤–æ–±–æ–¥–Ω—ã–º –º–µ—Å—Ç–∞–º –≤ –æ—á–µ—Ä–µ–¥–∏
        total_entries = len(info["entries"])
        max_to_add = min(MAX_PLAYLIST_SIZE, remaining_slots)
        entries_to_process = info["entries"][:max_to_add]
        
        added_count = 0
        for entry in entries_to_process:
            if entry and entry.get("title") and entry.get("url"):
                queue.append({
                    "title": entry["title"],
                    "url": entry["url"],
                    "requester": interaction.user.name,
                })
                added_count += 1
        
        # –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ª–∏–º–∏—Ç–∞—Ö
        if total_entries > max_to_add:
            await interaction.followup.send(
                f"üìÉ **–î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –∏–∑ {total_entries} —Ç—Ä–µ–∫–æ–≤**\n"
                f"üí° –õ–∏–º–∏—Ç –ø–ª–µ–π–ª–∏—Å—Ç–∞: {MAX_PLAYLIST_SIZE} —Ç—Ä–µ–∫–æ–≤\n"
                f"üìä –û—á–µ—Ä–µ–¥—å: {len(queue)}/{MAX_QUEUE_SIZE} —Ç—Ä–µ–∫–æ–≤"
            )
        else:
            await interaction.followup.send(
                f"üìÉ **–î–æ–±–∞–≤–ª–µ–Ω –ø–ª–µ–π–ª–∏—Å—Ç: {added_count} —Ç—Ä–µ–∫–æ–≤**\n"
                f"üìä –û—á–µ—Ä–µ–¥—å: {len(queue)}/{MAX_QUEUE_SIZE} —Ç—Ä–µ–∫–æ–≤"
            )
    else:
        # –î–ª—è –æ–¥–∏–Ω–æ—á–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤ –¥–æ–±–∞–≤–ª—è–µ–º —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–∞
        track = {
            "title": info["title"],
            "url": info["url"],
            "requester": interaction.user.name,
        }
        queue.append(track)
        await interaction.followup.send(
            f"üé∂ **–î–æ–±–∞–≤–ª–µ–Ω —Ç—Ä–µ–∫:** {track['title']}\n"
            f"üìä –û—á–µ—Ä–µ–¥—å: {len(queue)}/{MAX_QUEUE_SIZE} —Ç—Ä–µ–∫–æ–≤"
        )

    if not vc.is_playing():
        await play_next(vc, interaction.guild.id)


async def play_next(vc, guild_id):
    queue = get_queue(guild_id)
    if not queue:
        return

    next_track = queue.pop(0)
    source = create_source(next_track["url"])

    vc.play(source, after=lambda e: bot.loop.create_task(play_next(vc, guild_id)))


@tree.command(name="pause", description="–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def pause(interaction: discord.Interaction):
    log_command(interaction.user.name, "/pause")
    vc = interaction.guild.voice_client
    if vc and vc.is_playing():
        vc.pause()
        await interaction.response.send_message("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    else:
        await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.")


@tree.command(name="resume", description="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def resume(interaction: discord.Interaction):
    log_command(interaction.user.name, "/resume")
    vc = interaction.guild.voice_client
    if vc and vc.is_paused():
        vc.resume()
        await interaction.response.send_message("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–æ.")
    else:
        await interaction.response.send_message("‚ùå –ú—É–∑—ã–∫–∞ –Ω–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")


@tree.command(name="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å")
async def stop(interaction: discord.Interaction):
    log_command(interaction.user.name, "/stop")
    vc = interaction.guild.voice_client
    if vc:
        vc.stop()
        await vc.disconnect()
        queues[interaction.guild.id] = []
        await interaction.response.send_message("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
    else:
        await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")


@tree.command(name="skip", description="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é")
async def skip(interaction: discord.Interaction):
    log_command(interaction.user.name, "/skip")
    vc = interaction.guild.voice_client
    if vc and vc.is_playing():
        vc.stop()
        await interaction.response.send_message("‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω.")
    else:
        await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.")


@tree.command(name="queue", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å")
async def queue_cmd(interaction: discord.Interaction):
    log_command(interaction.user.name, "/queue")
    queue = get_queue(interaction.guild.id)
    
    if queue:
        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 10 —Ç—Ä–µ–∫–æ–≤ + –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∞—Ö
        display_tracks = queue[:10]
        text = "\n".join([
            f"{i+1}. {song['title'][:50]}{'...' if len(song['title']) > 50 else ''}"
            for i, song in enumerate(display_tracks)
        ])
        
        additional_info = ""
        if len(queue) > 10:
            additional_info = f"\n... –∏ –µ—â–µ {len(queue) - 10} —Ç—Ä–µ–∫–æ–≤"
        
        await interaction.response.send_message(
            f"üìÉ **–û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤** ({len(queue)}/{MAX_QUEUE_SIZE}):\n"
            f"```\n{text}{additional_info}\n```"
        )
    else:
        await interaction.response.send_message(
            f"üì≠ **–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞** (0/{MAX_QUEUE_SIZE})"
        )


@tree.command(name="status", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ –æ—á–µ—Ä–µ–¥–∏")
async def status(interaction: discord.Interaction):
    log_command(interaction.user.name, "/status")
    queue = get_queue(interaction.guild.id)
    vc = interaction.guild.voice_client
    
    status_text = "ü§ñ **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞**\n"
    
    if vc and vc.is_connected():
        channel_name = vc.channel.name
        if vc.is_playing():
            status_text += f"üéµ –ò–≥—Ä–∞–µ—Ç –≤ –∫–∞–Ω–∞–ª–µ: **{channel_name}**\n"
        elif vc.is_paused():
            status_text += f"‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ –≤ –∫–∞–Ω–∞–ª–µ: **{channel_name}**\n"
        else:
            status_text += f"‚èπÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –∫–∞–Ω–∞–ª—É: **{channel_name}**\n"
    else:
        status_text += "üîå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É\n"
    
    status_text += f"üìä –û—á–µ—Ä–µ–¥—å: **{len(queue)}/{MAX_QUEUE_SIZE}** —Ç—Ä–µ–∫–æ–≤\n"
    status_text += f"‚öôÔ∏è –õ–∏–º–∏—Ç –ø–ª–µ–π–ª–∏—Å—Ç–∞: **{MAX_PLAYLIST_SIZE}** —Ç—Ä–µ–∫–æ–≤"
    
    await interaction.response.send_message(status_text)


@tree.command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
async def help_cmd(interaction: discord.Interaction):
    log_command(interaction.user.name, "/help")
    await interaction.response.send_message(f"""üìñ **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞**

- `/play <url –∏–ª–∏ –∑–∞–ø—Ä–æ—Å>` ‚Äî –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞
- `/pause` ‚Äî –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é
- `/resume` ‚Äî –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
- `/stop` ‚Äî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è
- `/skip` ‚Äî –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é
- `/queue` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å
- `/status` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ –æ—á–µ—Ä–µ–¥–∏

**üí° –õ–∏–º–∏—Ç—ã:**
- –ú–∞–∫—Å–∏–º—É–º —Ç—Ä–µ–∫–æ–≤ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {MAX_PLAYLIST_SIZE}
- –ú–∞–∫—Å–∏–º—É–º —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏: {MAX_QUEUE_SIZE}
""")


bot.run(TOKEN)
