import os
import logging
import discord
import asyncio
from discord.ext import commands
from discord import app_commands
import yt_dlp

TOKEN = os.getenv("DISCORD_TOKEN")

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.guilds = True

bot = commands.Bot(command_prefix="/", intents=intents)
tree = bot.tree
queues = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–ª–µ–µ—Ä–∞ –ø–æ –≥–∏–ª—å–¥–∏—è–º
player_messages = {}
# –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–µ–∫–æ–≤
current_tracks = {}

logging.basicConfig(filename="bot.log", level=logging.INFO)

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É cookies
def get_ytdl_opts():
    """–ü–æ–ª—É—á–∏—Ç—å ytdl_opts —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π cookies"""
    ytdl_opts = {
        "format": "bestaudio",
        "noplaylist": False,
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª cookies
    cookies_file = os.getenv("YOUTUBE_COOKIES_FILE")
    if cookies_file and os.path.exists(cookies_file):
        ytdl_opts["cookiefile"] = cookies_file
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º YouTube cookies: {cookies_file}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ cookies
    browser_cookies = os.getenv("YOUTUBE_BROWSER_COOKIES")
    if browser_cookies and not cookies_file:
        try:
            browser, profile = browser_cookies.split(",", 1)
            ytdl_opts["cookiesfrombrowser"] = (browser.strip(), profile.strip())
            print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º cookies –±—Ä–∞—É–∑–µ—Ä–∞: {browser} ({profile})")
        except ValueError:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç YOUTUBE_BROWSER_COOKIES: {browser_cookies}")
    
    return ytdl_opts

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ytdl —Å cookies
ytdl_opts = get_ytdl_opts()
ytdl = yt_dlp.YoutubeDL(ytdl_opts)

def log_command(user, command):
    logging.info(f"{user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª {command}")

def get_queue(guild_id):
    return queues.setdefault(guild_id, [])

def create_source(url):
    return discord.FFmpegPCMAudio(
        url,
        before_options="-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5",
        options='-vn'
    )

def is_age_restricted_error(error):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å age-restriction"""
    error_str = str(error).lower()
    age_restricted_keywords = [
        "age-restricted",
        "sign in to confirm your age",
        "video is age restricted", 
        "sign in to confirm",
        "login required"
    ]
    return any(keyword in error_str for keyword in age_restricted_keywords)

class MusicPlayerView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(emoji="‚è∏Ô∏è", style=discord.ButtonStyle.primary, custom_id="pause_resume")
    async def pause_resume(self, interaction: discord.Interaction, button: discord.ui.Button):
        vc = interaction.guild.voice_client
        if not vc:
            await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.", ephemeral=True)
            return
        
        if vc.is_playing():
            vc.pause()
            button.emoji = "‚ñ∂Ô∏è"
            await interaction.response.send_message("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.", ephemeral=True)
        elif vc.is_paused():
            vc.resume()
            button.emoji = "‚è∏Ô∏è"
            await interaction.response.send_message("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–æ.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.", ephemeral=True)
            return
        
        await update_player_message(interaction.guild.id)
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        if interaction.guild.id in player_messages:
            try:
                await player_messages[interaction.guild.id].edit(view=self)
            except:
                pass
    
    @discord.ui.button(emoji="‚è≠Ô∏è", style=discord.ButtonStyle.secondary, custom_id="skip")
    async def skip(self, interaction: discord.Interaction, button: discord.ui.Button):
        vc = interaction.guild.voice_client
        if not vc or not vc.is_playing():
            await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.", ephemeral=True)
            return
        
        vc.stop()
        await interaction.response.send_message("‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω.", ephemeral=True)
    
    @discord.ui.button(emoji="‚èπÔ∏è", style=discord.ButtonStyle.danger, custom_id="stop")
    async def stop(self, interaction: discord.Interaction, button: discord.ui.Button):
        vc = interaction.guild.voice_client
        if not vc:
            await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.", ephemeral=True)
            return
        
        vc.stop()
        await vc.disconnect()
        queues[interaction.guild.id] = []
        current_tracks[interaction.guild.id] = None
        
        await interaction.response.send_message("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ.", ephemeral=True)
        await update_player_message(interaction.guild.id)
    
    @discord.ui.button(emoji="üìÉ", style=discord.ButtonStyle.success, custom_id="queue")
    async def show_queue(self, interaction: discord.Interaction, button: discord.ui.Button):
        queue = get_queue(interaction.guild.id)
        
        if not queue:
            await interaction.response.send_message("üì≠ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞.", ephemeral=True)
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ—á–µ—Ä–µ–¥–∏
        embed = discord.Embed(
            title="üìÉ –û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤",
            color=0x0099ff
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Ç—Ä–µ–∫–æ–≤
        queue_text = ""
        for i, track in enumerate(queue[:10]):
            queue_text += f"`{i+1}.` **{track['title'][:50]}{'...' if len(track['title']) > 50 else ''}**\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ: {track['requester']}*\n\n"
        
        if len(queue) > 10:
            queue_text += f"*... –∏ –µ—â–µ {len(queue) - 10} —Ç—Ä–µ–∫–æ–≤*"
        
        embed.description = queue_text if queue_text else "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞"
        embed.set_footer(text=f"–í—Å–µ–≥–æ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏: {len(queue)}")
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(emoji="üîÄ", style=discord.ButtonStyle.secondary, custom_id="shuffle")
    async def shuffle_queue(self, interaction: discord.Interaction, button: discord.ui.Button):
        import random
        queue = get_queue(interaction.guild.id)
        
        if len(queue) < 2:
            await interaction.response.send_message("‚ùå –í –æ—á–µ—Ä–µ–¥–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç—Ä–µ–∫–æ–≤ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è.", ephemeral=True)
            return
        
        random.shuffle(queue)
        await interaction.response.send_message(f"üîÄ –û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞! ({len(queue)} —Ç—Ä–µ–∫–æ–≤)", ephemeral=True)
        await update_player_message(interaction.guild.id)

def create_player_embed(guild_id):
    """–°–æ–∑–¥–∞—Ç—å embed –¥–ª—è –ø–ª–µ–µ—Ä–∞"""
    current_track = current_tracks.get(guild_id)
    queue = get_queue(guild_id)
    
    embed = discord.Embed()
    
    if current_track:
        embed.title = "üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç"
        embed.description = f"**{current_track['title']}**"
        embed.add_field(
            name="üë§ –ó–∞–∫–∞–∑–∞–ª", 
            value=current_track['requester'], 
            inline=True
        )
        embed.add_field(
            name="üìÉ –í –æ—á–µ—Ä–µ–¥–∏", 
            value=f"{len(queue)} —Ç—Ä–µ–∫–æ–≤", 
            inline=True
        )
        embed.add_field(
            name="üîó –°—Å—ã–ª–∫–∞", 
            value=f"[YouTube]({current_track.get('webpage_url', 'N/A')})", 
            inline=True
        )
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        guild = bot.get_guild(guild_id)
        vc = discord.utils.get(bot.voice_clients, guild=guild) if guild else None
        
        if vc:
            if vc.is_playing():
                embed.color = 0x00ff00  # –ó–µ–ª–µ–Ω—ã–π
                embed.set_footer(text="‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è", icon_url="https://cdn.discordapp.com/emojis/899330171486187530.gif")
            elif vc.is_paused():
                embed.color = 0xffaa00  # –û—Ä–∞–Ω–∂–µ–≤—ã–π
                embed.set_footer(text="‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ")
            else:
                embed.color = 0xff0000  # –ö—Ä–∞—Å–Ω—ã–π
                embed.set_footer(text="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            embed.color = 0x808080  # –°–µ—Ä—ã–π
            embed.set_footer(text="üîå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
    else:
        embed.title = "üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä"
        embed.description = "*–ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç*"
        embed.color = 0x808080
        embed.set_footer(text="‚èπÔ∏è –ì–æ—Ç–æ–≤ –∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é")
        
        if queue:
            embed.add_field(
                name="üìÉ –í –æ—á–µ—Ä–µ–¥–∏", 
                value=f"{len(queue)} —Ç—Ä–µ–∫–æ–≤", 
                inline=True
            )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if current_track and 'thumbnail' in current_track:
        embed.set_thumbnail(url=current_track['thumbnail'])
    
    return embed

async def update_player_message(guild_id):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–ª–µ–µ—Ä–∞"""
    if guild_id not in player_messages:
        return
    
    try:
        message = player_messages[guild_id]
        embed = create_player_embed(guild_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        view = MusicPlayerView()
        guild = bot.get_guild(guild_id)
        vc = discord.utils.get(bot.voice_clients, guild=guild) if guild else None
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –ø–∞—É–∑—ã/–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        for item in view.children:
            if item.custom_id == "pause_resume":
                if vc and vc.is_playing():
                    item.emoji = "‚è∏Ô∏è"
                else:
                    item.emoji = "‚ñ∂Ô∏è"
                break
        
        await message.edit(embed=embed, view=view)
        
    except discord.NotFound:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ, —É–±–∏—Ä–∞–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        if guild_id in player_messages:
            del player_messages[guild_id]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–µ–µ—Ä–∞: {e}")

@bot.event
async def on_ready():
    print(f"‚úÖ –í–æ—à–ª–∏ –∫–∞–∫ {bot.user}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ cookies –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    cookies_file = os.getenv("YOUTUBE_COOKIES_FILE")
    browser_cookies = os.getenv("YOUTUBE_BROWSER_COOKIES")
    
    if cookies_file and os.path.exists(cookies_file):
        print("üîê YouTube cookies –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (—Ñ–∞–π–ª)")
    elif browser_cookies:
        print("üîê YouTube cookies –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–±—Ä–∞—É–∑–µ—Ä)")
    else:
        print("‚ÑπÔ∏è YouTube cookies –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –î–æ–±–∞–≤–ª—è–µ–º persistent view
    bot.add_view(MusicPlayerView())
    
    await bot.change_presence(activity=discord.Activity(
        type=discord.ActivityType.listening,
        name="/help"
    ))
    try:
        synced = await tree.sync()
        print(f"üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã {len(synced)} –∫–æ–º–∞–Ω–¥(—ã)")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ sync: {e}")

@bot.event
async def on_voice_state_update(member, before, after):
    if member.bot:
        return

    vc = discord.utils.get(bot.voice_clients, guild=member.guild)

    if vc and vc.channel and len(vc.channel.members) == 1: 
        if vc.is_playing():
            vc.pause() 
            print("‚è∏Ô∏è –ú—É–∑—ã–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –æ—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω –≤ –∫–∞–Ω–∞–ª–µ.")
            await update_player_message(member.guild.id)

        await asyncio.sleep(60)  
        if len(vc.channel.members) == 1:  
            await vc.disconnect()
            print(f"‚èπÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ {vc.channel.name} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {member.guild.name}")
            await update_player_message(member.guild.id)

@tree.command(name="play", description="–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç —Å YouTube")
@app_commands.describe(query="–°—Å—ã–ª–∫–∞ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å")
async def play(interaction: discord.Interaction, query: str):
    log_command(interaction.user.name, "/play")

    vc = interaction.guild.voice_client
    if not vc:
        if interaction.user.voice and interaction.user.voice.channel:
            vc = await interaction.user.voice.channel.connect()
        else:
            await interaction.response.send_message("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞–π–¥–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.", ephemeral=True)
            return

    # –û—Ç–≤–µ—á–∞–µ–º —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–π–º–∞—É—Ç–∞
    await interaction.response.send_message("üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...", ephemeral=True)

    search_query = f"ytsearch1:{query}" if not (query.startswith("http://") or query.startswith("https://")) else query

    try:
        info = ytdl.extract_info(search_query, download=False)
    except Exception as e:
        if is_age_restricted_error(e):
            await interaction.edit_original_response(content="üîû **–ö–æ–Ω—Ç–µ–Ω—Ç —Å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏**\n‚ùå –≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥—É—é –≤–µ—Ä—Å–∏—é: `cover`, `lyrics`, `instrumental`")
        else:
            await interaction.edit_original_response(content=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
        return

    queue = get_queue(interaction.guild.id)

    if "entries" in info:
        added_count = 0
        for entry in info["entries"]:
            queue.append({
                "title": entry["title"],
                "url": entry["url"],
                "webpage_url": entry.get("webpage_url", ""),
                "thumbnail": entry.get("thumbnail", ""),
                "requester": interaction.user.name,
            })
            added_count += 1
        
        await interaction.edit_original_response(content=f"üìÉ **–î–æ–±–∞–≤–ª–µ–Ω –ø–ª–µ–π–ª–∏—Å—Ç: {added_count} —Ç—Ä–µ–∫–æ–≤**")
    else:
        track = {
            "title": info["title"],
            "url": info["url"],
            "webpage_url": info.get("webpage_url", ""),
            "thumbnail": info.get("thumbnail", ""),
            "requester": interaction.user.name,
        }
        queue.append(track)
        await interaction.edit_original_response(content=f"üé∂ **–î–æ–±–∞–≤–ª–µ–Ω —Ç—Ä–µ–∫:** {track['title']}")

    # –°–æ–∑–¥–∞–µ–º –ø–ª–µ–µ—Ä, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if interaction.guild.id not in player_messages:
        embed = create_player_embed(interaction.guild.id)
        view = MusicPlayerView()
        player_msg = await interaction.followup.send(embed=embed, view=view)
        player_messages[interaction.guild.id] = player_msg

    if not vc.is_playing():
        await play_next(vc, interaction.guild.id)

async def play_next(vc, guild_id):
    queue = get_queue(guild_id)
    if not queue:
        current_tracks[guild_id] = None
        await update_player_message(guild_id)
        return

    next_track = queue.pop(0)
    current_tracks[guild_id] = next_track
    source = create_source(next_track["url"])

    def after_play(error):
        if error:
            print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {error}")
        bot.loop.create_task(play_next(vc, guild_id))

    vc.play(source, after=after_play)
    await update_player_message(guild_id)

@tree.command(name="pause", description="–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def pause(interaction: discord.Interaction):
    log_command(interaction.user.name, "/pause")
    vc = interaction.guild.voice_client
    if vc and vc.is_playing():
        vc.pause()
        await interaction.response.send_message("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.", ephemeral=True)
        await update_player_message(interaction.guild.id)
    else:
        await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.", ephemeral=True)

@tree.command(name="resume", description="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def resume(interaction: discord.Interaction):
    log_command(interaction.user.name, "/resume")
    vc = interaction.guild.voice_client
    if vc and vc.is_paused():
        vc.resume()
        await interaction.response.send_message("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–æ.", ephemeral=True)
        await update_player_message(interaction.guild.id)
    else:
        await interaction.response.send_message("‚ùå –ú—É–∑—ã–∫–∞ –Ω–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.", ephemeral=True)

@tree.command(name="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å")
async def stop(interaction: discord.Interaction):
    log_command(interaction.user.name, "/stop")
    vc = interaction.guild.voice_client
    if vc:
        vc.stop()
        await vc.disconnect()
        queues[interaction.guild.id] = []
        current_tracks[interaction.guild.id] = None
        await interaction.response.send_message("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ.", ephemeral=True)
        await update_player_message(interaction.guild.id)
    else:
        await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.", ephemeral=True)

@tree.command(name="skip", description="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é")
async def skip(interaction: discord.Interaction):
    log_command(interaction.user.name, "/skip")
    vc = interaction.guild.voice_client
    if vc and vc.is_playing():
        vc.stop()
        await interaction.response.send_message("‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω.", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.", ephemeral=True)

@tree.command(name="queue", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å")
async def queue_cmd(interaction: discord.Interaction):
    log_command(interaction.user.name, "/queue")
    queue = get_queue(interaction.guild.id)
    
    if not queue:
        await interaction.response.send_message("üì≠ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞.", ephemeral=True)
        return
    
    embed = discord.Embed(
        title="üìÉ –û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤",
        color=0x0099ff
    )
    
    queue_text = ""
    for i, track in enumerate(queue[:10]):
        queue_text += f"`{i+1}.` **{track['title'][:50]}{'...' if len(track['title']) > 50 else ''}**\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ: {track['requester']}*\n\n"
    
    if len(queue) > 10:
        queue_text += f"*... –∏ –µ—â–µ {len(queue) - 10} —Ç—Ä–µ–∫–æ–≤*"
    
    embed.description = queue_text
    embed.set_footer(text=f"–í—Å–µ–≥–æ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏: {len(queue)}")
    
    await interaction.response.send_message(embed=embed, ephemeral=True)

@tree.command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
async def help_cmd(interaction: discord.Interaction):
    log_command(interaction.user.name, "/help")
    
    embed = discord.Embed(
        title="üìñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞",
        description="–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –º—É–∑—ã–∫–æ–π —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –∫–Ω–æ–ø–æ–∫ –ø–ª–µ–µ—Ä–∞",
        color=0x0099ff
    )
    
    embed.add_field(
        name="üéµ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
        value=(
            "`/play <–∑–∞–ø—Ä–æ—Å>` ‚Äî –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–∫\n"
            "`/pause` ‚Äî –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å\n"
            "`/resume` ‚Äî –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n"
            "`/stop` ‚Äî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è\n"
            "`/skip` ‚Äî –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–∫\n"
            "`/queue` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –æ—á–µ—Ä–µ–¥—å"
        ),
        inline=False
    )
    
    embed.add_field(
        name="üéõÔ∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–ª–µ–µ—Ä",
        value=(
            "‚è∏Ô∏è/‚ñ∂Ô∏è ‚Äî –ü–∞—É–∑–∞/–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ\n"
            "‚è≠Ô∏è ‚Äî –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–∫\n"
            "‚èπÔ∏è ‚Äî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å\n"
            "üìÉ ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –æ—á–µ—Ä–µ–¥—å\n"
            "üîÄ ‚Äî –ü–µ—Ä–µ–º–µ—à–∞—Ç—å –æ—á–µ—Ä–µ–¥—å"
        ),
        inline=False
    )
    
    embed.set_footer(text="üí° –í—Å–µ –æ—Ç–≤–µ—Ç—ã –∫–æ–º–∞–Ω–¥ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –≤–∞–º!")
    
    await interaction.response.send_message(embed=embed, ephemeral=True)

bot.run(TOKEN)
