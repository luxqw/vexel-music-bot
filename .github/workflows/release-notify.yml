# A clear name for the production release notification workflow
name: Production Release Notify

on:
  release:
    types: [published] # This workflow runs when a new release is published

jobs:
  notify:
    runs-on: ubuntu-latest
    # This condition ensures the job only runs for final releases, not pre-releases.
    if: github.event.release.prerelease == false

    steps:
      - name: Notify Discord about New Release
        env:
          # Directly use the production webhook secret
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          # The release body is fetched and escaped to be safely embedded in JSON
          RELEASE_BODY=$(echo "${{ github.event.release.body }}" | sed 's/"/\\"/g' | sed 's/$/\\n/g' | tr -d '\n')
          
          # Send a notification using a heredoc for better readability of the JSON payload
          curl -H "Content-Type: application/json" -d @- "$DISCORD_WEBHOOK_URL" <<EOF
          {
            "embeds": [{
              "title": "🎉 New Production Release Published!",
              "description": "**Release:** [${{ github.event.release.name }}](${{ github.event.release.html_url }})\n**Tag:** \`${{ github.event.release.tag_name }}\`\n**Author:** ${{ github.event.release.author.login }}\n\n${RELEASE_BODY}",
              "url": "${{ github.event.release.html_url }}",
              "color": 5814783,
              "fields": [
                {
                  "name": "🐳 Docker Images",
                  "value": "ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}\nghcr.io/${{ github.repository }}:latest"
                }
              ],
              "footer": {
                "text": "Production Environment • New Release",
                "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
              },
              "timestamp": "${{ github.event.release.published_at }}"
            }]
          }
          EOF
